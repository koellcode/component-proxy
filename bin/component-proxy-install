#!/usr/bin/env node
var program = require('commander'),
    path = require('path'),
    util = require('util'),
    utils = require('../lib/utils'),
    request = require('superagent'),
    createApp = require('../lib/app').createApp,
    spawn = require('child_process').spawn;

program
  .version('0.0.1')
  .option('-p, --port [port]', 'Specify server port number [default=35555]', parseInt, 35555)
  .option('-d, --proxy-storage-dir [proxyStorageDir]', 'Specify the proxy storage directory', utils.expandAndResolve, 
          utils.expandAndResolve('~/.component-proxy'))
  .option('-c, --max-cache-age [maxCacheAge]', 'The max cache age in seconds [default=60]', parseFloat, 120)
  .option('--dev', 'Development flag')
  .parse(process.argv);


function runWithProxy(install) {
  console.log("Starting proxy server");

  var app = createApp(program);
  var server = app.listen(program.port);

  install(function() {
    console.log('Stopping proxy server');
    server.close();
    process.exit(0);
  });
}

function runInstall(done) {
  var installArgs = ['install', '-r', 'http://127.0.0.1:35555'];
  if(program.dev) {
    installArgs.push('--dev');
  }
  installArgs = installArgs.concat(process.argv.slice(2));

  var installProc = spawn('component', installArgs);

  installProc.stdout.on('data', function(data) {
    process.stdout.write('' + data);
  });

  installProc.stderr.on('data', function(data) {
    process.stderr.write('' + data);
  });

  installProc.on('close', function(code) {
    done();
  });
}

// Make sure we only run the server if the server isn't up
request.get(util.format('http://127.0.0.1:%d/is-component-proxy', program.port))
  .end(function(err, res) {
    if(err) {
      if(err.code === 'ECONNREFUSED') {
        return runWithProxy(runInstall);
      }
    }
    if(res.statusCode !== 200) {
      throw new Error('Unknown service running on port %d. Try a different port', program.port);
    }
    runInstall(function() {})
  });
